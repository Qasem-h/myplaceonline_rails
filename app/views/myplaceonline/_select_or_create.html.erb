<%
existingobj ||= Myp.new_model(objform[0..(objform.index('/')-1)].singularize.camelize.constantize)
collapsed = collapsed.nil? ? false : collapsed
existingcollapsed = false
random_name = SecureRandom.hex(10)
new_item_collapsible_id = random_name + "_new_item"
always_search ||= false
only_new ||= false
simpleform ||= nil
existingitems ||= nil
if !(defined?(create_new))
  create_new = true
end
if !(defined?(allow_new))
  allow_new = true
end
if !existingobj.nil? && !existingobj.id.nil?
  allow_new = false
end

# If there are no existing items, then expand the new item instead
if !objform.blank?
  i = objform.index('/')
  if i != -1
    m = Object.const_get(objform[0..i-1].singularize.camelize)
    if m.new.respond_to?("identity_id")
      x = m.send("where", identity_id: current_user.primary_identity.id)
      if x.length == 0
        existingcollapsed = true
      end
    end
  end
end

# Some user confusion when existing is expanded, so we always collapse it,
# unless new isn't shown
existingcollapsed = true
  
if !existingobj.id.nil?
  existingcollapsed = false
end

force_existing ||= false
if force_existing
  existingcollapsed = false
end

%>
<div data-role="collapsible" data-collapsed="<%= collapsed %>" class="form_container">
  <h4><%= heading %></h4>
  <div data-role="collapsible-set">
    <% if !only_new %>
      <div data-role="collapsible" data-collapsed="<%= existingcollapsed %>">
        <%= f.fields_for name, existingobj do |sub_fields| %>
          <%
            fieldid = sub_fields.object_name.gsub("\[", "_").gsub("\]", "") + "_id"
          %>
          <h3><%= t("myplaceonline.general.existing") + " " + heading %></h3>
          <div id="<%= random_name %>_searchable_container">
            <ul id="<%= random_name %>_searchable" data-role="listview" data-inset="true" data-filter="true" data-icon="false" data-filter-placeholder="<%= t("myplaceonline.search.placeholder") %>">
              <% if !existingobj.nil? && !existingobj.id.nil? %>
                <li>
                  <%= link_to(existingobj.display, send(existingobjurl, existingobj), onclick: Myp.select_listitem('#' + fieldid)) %>
                  <%= link_to(existingobj.display, send(existingobjurl, existingobj), :class => "splitlink") %>
                </li>
              <% end %>
              <% if !existingitems.nil? %>
                <% existingitems.each do |item| %>
                  <%=
                    render partial: 'myplaceonline/list_item', locals: {
                      item: item
                    }
                  %>
                <% end %>
              <% end %>
            </ul>
          </div>
          <%= sub_fields.hidden_field(:id) %>
          <script type="text/javascript">
            myplaceonline.onPageLoad(function() {
              $("#<%= random_name %>_searchable li").each(function(index) {
                $(this).addClass('ui-btn-active');
              });
              myplaceonline.remoteDataListInitialize($("#<%= random_name %>_searchable"), [
                {title: "<%= t("myplaceonline.general.existing") + " " + heading %>", url: "<%= raw(Myp.append_query_parameter(searchurl, "select_or_create", "true")) %>", static_list: true}
              ], function(ul) {
                ul.find("li a:not(.splitlink)").each(function(index) {
                  $(this).attr("onclick", "<%= raw(Myp.select_listitem('#' + fieldid)) %>");
                });
                <% if always_search %>
                  myplaceonline.remoteDataListReset(ul, true);
                <% end %>
              });
              <% if autofocus && !existingcollapsed %>
              myplaceonline.maybeFocus($("#<%= random_name %>_searchable_container input"));
              <% end %>
            });
          </script>
        <% end %>
      </div>
    <% end %>
    <% if allow_new %>
      <div id="<%= new_item_collapsible_id %>" data-role="collapsible" data-collapsed="<%= !existingcollapsed %>">
        <%
          first = true
          if !existingobj.id.nil?
            # There's an existing object selected, so don't fill in the form
            # with those attributes
            existingobj = Myp.new_model(objform[0..(objform.index('/')-1)].singularize.camelize.constantize)
          end
        %>
        <%
        begin
          if ExecutionContext.push_marker(:select_or_create_stack) < 5
        %>
            <%= f.fields_for name, existingobj do |sub_fields| %>
              <h3><%= t("myplaceonline.general.new") + " " + heading %></h3>
              <%= render partial: objform + ".html", locals: { f: sub_fields, obj: existingobj, edit: false, autofocus: autofocus, nested: true, simpleform: simpleform } %>
              <%
                if existingcollapsed && autofocus && first
                  first = false
              %>
                <script type="text/javascript">
                  myplaceonline.onPageLoad(function() {
                    myplaceonline.maybeFocus($("#<%= new_item_collapsible_id %> .autofocus"));
                  });
                </script>
              <% end %>
            <% end %>
        <%
          end
        ensure
          ExecutionContext.pop_marker(:select_or_create_stack)
        end
        %>
      </div>
    <% else %>
      <% if create_new && current_user.admin? %>
        <p><%= link_to t("myplaceonline.general.create_new"), "/" + existingobj.class.name.underscore.pluralize + "/new", :class => 'ui-btn ui-btn-icon-left ui-icon-plus ui-btn-inline' %></p>
      <% end %>
    <% end %>
  </div>
</div>
